%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.09.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.10.0.1602886 \\(R2021a\\). Operating System: Linux)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 446 323
%%HiResBoundingBox: 0 0 446 323
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font HFVFBB+Helvetica
%!FontType1-1.0: HFVFBB+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /HFVFBB+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -23 520 723] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB95BBAF93C4ECFAF3B5207C1B0A3EB057CD4465C3346D40BF43A7E9DC
85E30DEBA8499D8FAABC2CFE9FDD8D12B911A34E3DE2E9E949BE4324A8BBE170
4CF94647EC50DECE086BBFC86B6B4F56E1308F26AC8F19F4E6B280BA80E02A6A
E856C76EA3C35B9E992FA46E966A6798F6AB60A468C3712851D0CC278F8ABC24
60AADEC224C4BD11B362A3F9F874FD970374D6D5514CB192C352985DFFEDAE63
ACFECCE28420F9240188BF3E2AF51101B4CD979B2AEF371B1ADC0364D50785C1
BD1D68C48D77C6CFBF615274A769974BE1571AE9A564B0705E108256220A2724
3AA31FD62ACC68DA6AA50642FB302FC479B5A54D15D70D581439AD180F99DB9B
29A33407C14BAA4A115DEB0E06E12982BCD502C920C90B3FE50DD5CAC2BB8C00
F49DB3C5516AC90C73C813E59E25568E1EB7163C322E41BF340E39E6D0F9D432
1F0DA76579483A976E9A13C851F6BEF5464ED7D3F848C40E39CC3758EB133880
600B325BA98A6C11D02036748DDCFD95993C97D365F343C970871569A3E37C68
715895FB8B3740749E27F02E53C3217BDA07F81B331141CD7AB9DC604BA1F9E5
870408F0422FBA3F1C255F7CD0505D3483DFC9C05B698445DE5669E38BE92CAE
BEE771599DFD6E037DBDD4E29F4CB3E69608D0FE6FD2C1E4649A5C591E8AB5D3
F7A1EFE89246D8F7207F7271342C561FD68018227BB872823E024A8765B88276
A20AE48F91EE51C49CDC9D5142F105C256BB75EDFCC866B3084BB2BEA25C96EF
9506370C9B1F9202BF494BADE6F6DAE34953E4F2D133F0ED06C255AD81D4288F
1A9B4F81669AB0688C5C27C130C963116DC5A1F0A22F0536076B0AEAD073A718
377232F9C636E7DFBA0002628480FF26235B7A32FAA6ACC7B61F2B4F18673407
7CB1BF2A6B1CE81272A7EEC4D4E04828457A850C2E442AA973291C3DECAAAED8
2AB29131394ADD7A8353A214C05AC17A325FB2E2DD18641C4BF90294E121104C
CC07C3DF95AE08851DFB0A94F3F8B1671BF137C8B1A3CC1CBFC87CA110CF970C
4548A5A4B3E4AF5F0E17F702AB1ABD6408710FD8D2C5D472BA20EC781AA498E2
883DFF606D421E345CFD34A4D9FA8D70C5B28F08403E86540B04E84587D7B23A
D2752293FF14356C09B7EA8A3BD1123D1D4771DD0DCA77604C7F375E2D93BE7C
021A727607EF6064D71F88D92B85F9C4D92048D148851808BC964D57A548BB9C
611D5F0FCA8862DCCE8FC787F2C98EDAA6FC0EAC947813E3BB330018504566CC
62F0231002852F2DEDBD1C996F4749968125640622F708938D16E7EA16AA69E1
0EADAD2345E9B18FB4D4227679B513B3D6DA05440690E0B8A0074093C360090C
441AF8096A9D8D821B76C8FFE45BABC1831AFAD16011E8F99B760582AEE0741F
A0FA83222D3A520C308DE56B08D03F4E2B693D3F838384369220B78670CE65F2
866A741C4E90408E294322DAC74601E5CBE41D77DEF82A644BB08B514546EB11
AE6969F22474321D3C641307E5155F1F54B919497D61A66780324C8BC1A0E643
7595B867BCC3FB5B6866230ABC178E6DA20EC1F572009F6D24842579C8A9C2AD
D55B5133EFD216E19E57F92AA965D5AF87934B50A72D13C609F29B83AE010850
127DA7296B0F1F9F72B377293964121A93C0848489C80B43F1DEEDF5798FE0EE
C15D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F7_0 /HFVFBB+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 446 323 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[1] sc
0 -0.003906 4460.88 3232.18 re
f
0 -0.003906 4460.88 3232.18 re
f
726.262 352.168 3164.88 2637.4 re
f
5.00088 w
2 J
1 j
/DeviceGray {} CS
[0.1489] SC
726.262 352.168 m
3891.14 352.168 l
S
726.262 2989.57 m
3891.14 2989.57 l
S
726.262 352.168 m
726.262 383.816 l
S
1253.74 352.168 m
1253.74 383.816 l
S
1781.22 352.168 m
1781.22 383.816 l
S
2308.7 352.168 m
2308.7 383.816 l
S
2836.18 352.168 m
2836.18 383.816 l
S
3363.66 352.168 m
3363.66 383.816 l
S
3891.14 352.168 m
3891.14 383.816 l
S
726.262 2989.57 m
726.262 2957.92 l
S
1253.74 2989.57 m
1253.74 2957.92 l
S
1781.22 2989.57 m
1781.22 2957.92 l
S
2308.7 2989.57 m
2308.7 2957.92 l
S
2836.18 2989.57 m
2836.18 2957.92 l
S
3363.66 2989.57 m
3363.66 2957.92 l
S
3891.14 2989.57 m
3891.14 2957.92 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 69.1043 21.8262] Tm
0 0 Td
/F7_0 10.0002 Tf
(0)
[5.560111
0] Tj
-3936.1 TJm
(0.02)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
-3328.67 TJm
(0.04)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
-3328.71 TJm
(0.06)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
-3328.66 TJm
(0.08)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
-3641.71 TJm
(0.1)
[5.560111
0
2.780056
0
5.560111
0] Tj
-3571.66 TJm
(0.12)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
Q
2149.72 76.1563 m
2149.72 80.3125 l
2157.71 80.3125 2163.25 82.5156 2166.35 86.918 c
2185.91 115.898 l
2164.27 148.789 l
2163.05 150.262 2161.4 151.199 2159.32 151.609 c
2157.24 152.016 2154.61 152.219 2151.43 152.219 c
2151.43 156.375 l
2184.21 156.375 l
2184.21 152.219 l
2182.82 152.219 2181.21 151.93 2179.37 151.355 c
2177.54 150.789 2176.63 150.016 2176.63 149.039 c
2176.63 148.875 2176.66 148.75 2176.74 148.672 c
2192.04 125.195 l
2205.61 145.371 l
2205.93 146.102 2206.09 146.672 2206.09 147.086 c
2206.09 148.711 2205.3 149.977 2203.71 150.871 c
2202.12 151.77 2200.43 152.219 2198.63 152.219 c
2198.63 156.375 l
2227.37 156.375 l
2227.37 152.219 l
2219.38 152.219 2213.8 149.977 2210.62 145.488 c
2194.6 121.523 l
2219.43 83.6133 l
2220.73 82.1484 2222.4 81.2344 2224.43 80.8672 c
2226.47 80.4961 2229.08 80.3125 2232.26 80.3125 c
2232.26 76.1563 l
2199.37 76.1563 l
2199.37 80.3125 l
2200.59 80.3125 2202.18 80.5781 2204.13 81.1094 c
2206.09 81.6367 2207.07 82.4336 2207.07 83.4961 c
2207.07 83.6602 2206.99 83.7773 2206.82 83.8555 c
2188.36 112.227 l
2171.49 87.043 l
2171.25 86.5508 2171.12 86.0234 2171.12 85.4531 c
2171.12 83.8203 2171.9 82.5547 2173.45 81.6563 c
2174.99 80.7617 2176.62 80.3125 2178.34 80.3125 c
2178.34 76.1563 l
2149.72 76.1563 l
f
2313.47 47.0508 m
2309.07 50.4805 2305.3 54.4141 2302.16 58.8516 c
2299.02 63.2969 2296.45 68.0469 2294.45 73.0977 c
2292.46 78.1523 2290.95 83.4336 2289.93 88.9375 c
2288.91 94.4414 2288.4 99.9648 2288.4 105.504 c
2288.4 111.129 2288.91 116.691 2289.93 122.195 c
2290.95 127.703 2292.48 133 2294.52 138.094 c
2296.55 143.191 2299.16 147.938 2302.34 152.336 c
2305.52 156.738 2309.23 160.613 2313.47 163.957 c
2313.47 164.117 2313.63 164.199 2313.96 164.199 c
2315.06 164.199 l
2315.3 164.199 2315.53 164.098 2315.73 163.895 c
2315.94 163.691 2316.04 163.469 2316.04 163.223 c
2316.04 162.816 2315.96 162.531 2315.8 162.367 c
2311.96 158.699 2308.78 154.727 2306.25 150.441 c
2303.73 146.164 2301.69 141.598 2300.14 136.746 c
2298.59 131.898 2297.47 126.887 2296.78 121.703 c
2296.09 116.527 2295.74 111.129 2295.74 105.504 c
2295.74 80.6367 2302.38 61.7266 2315.67 48.7656 c
2315.91 48.6016 2316.04 48.2773 2316.04 47.7852 c
2316.04 47.625 2315.94 47.4219 2315.73 47.1758 c
2315.53 46.9297 2315.3 46.8086 2315.06 46.8086 c
2313.96 46.8086 l
2313.63 46.8086 2313.47 46.8906 2313.47 47.0508 c
f
2327.25 76.1563 m
2327.25 80.3125 l
2329.86 80.3125 2332.04 80.5156 2333.79 80.9219 c
2335.54 81.3359 2336.42 82.3555 2336.42 83.9805 c
2336.42 116.023 l
2336.42 118.141 2336.09 119.668 2335.44 120.609 c
2334.79 121.543 2333.87 122.109 2332.68 122.316 c
2331.5 122.523 2329.69 122.629 2327.25 122.629 c
2327.25 126.785 l
2344.24 128.004 l
2344.24 116.508 l
2345.79 119.934 2348.11 122.707 2351.21 124.828 c
2354.31 126.945 2357.65 128.004 2361.24 128.004 c
2370.29 128.004 2375.59 124.336 2377.14 117 c
2378.69 120.34 2380.97 123.008 2383.98 125.008 c
2387 127.004 2390.3 128.004 2393.88 128.004 c
2397.47 128.004 2400.47 127.434 2402.88 126.289 c
2405.28 125.152 2407.09 123.398 2408.32 121.031 c
2409.54 118.668 2410.16 115.734 2410.16 112.227 c
2410.16 83.9805 l
2410.16 82.3555 2411.03 81.3359 2412.78 80.9219 c
2414.53 80.5156 2416.71 80.3125 2419.32 80.3125 c
2419.32 76.1563 l
2392.55 76.1563 l
2392.55 80.3125 l
2395.16 80.3125 2397.33 80.5156 2399.08 80.9219 c
2400.83 81.3359 2401.71 82.3555 2401.71 83.9805 c
2401.71 111.867 l
2401.71 115.781 2401.14 118.938 2400 121.336 c
2398.86 123.742 2396.58 124.945 2393.16 124.945 c
2388.67 124.945 2384.96 123.133 2382.03 119.504 c
2379.09 115.879 2377.62 111.785 2377.62 107.219 c
2377.62 83.9805 l
2377.62 82.3555 2378.48 81.3359 2380.19 80.9219 c
2381.91 80.5156 2384.11 80.3125 2386.79 80.3125 c
2386.79 76.1563 l
2359.89 76.1563 l
2359.89 80.3125 l
2362.58 80.3125 2364.78 80.5156 2366.49 80.9219 c
2368.21 81.3359 2369.07 82.3555 2369.07 83.9805 c
2369.07 111.867 l
2369.07 115.695 2368.52 118.836 2367.42 121.281 c
2366.32 123.723 2364.01 124.945 2360.51 124.945 c
2356.02 124.945 2352.31 123.133 2349.38 119.504 c
2346.44 115.879 2344.97 111.785 2344.97 107.219 c
2344.97 83.9805 l
2344.97 82.3555 2345.83 81.3359 2347.55 80.9219 c
2349.26 80.5156 2351.42 80.3125 2354.03 80.3125 c
2354.03 76.1563 l
2327.25 76.1563 l
f
2431.28 46.8086 m
2430.63 46.8086 2430.3 47.1328 2430.3 47.7852 c
2430.3 48.1953 2430.38 48.4766 2430.54 48.6406 c
2443.91 61.6836 2450.6 80.6367 2450.6 105.504 c
2450.6 130.371 2444 149.285 2430.79 162.242 c
2430.46 162.406 2430.3 162.73 2430.3 163.223 c
2430.3 163.469 2430.4 163.691 2430.61 163.895 c
2430.81 164.098 2431.03 164.199 2431.28 164.199 c
2432.38 164.199 l
2432.63 164.199 2432.83 164.117 2432.99 163.957 c
2438.62 159.555 2443.3 154.172 2447.05 147.813 c
2450.8 141.457 2453.54 134.691 2455.25 127.52 c
2456.96 120.344 2457.82 113.008 2457.82 105.504 c
2457.82 99.9648 2457.35 94.5 2456.41 89.1172 c
2455.47 83.7383 2453.98 78.4375 2451.95 73.2227 c
2449.91 68.0039 2447.32 63.1953 2444.18 58.7891 c
2441.04 54.3906 2437.31 50.4805 2432.99 47.0508 c
2432.83 46.8906 2432.63 46.8086 2432.38 46.8086 c
2431.28 46.8086 l
f
726.262 352.168 m
726.262 2989.57 l
S
3891.14 352.168 m
3891.14 2989.57 l
S
726.262 352.168 m
757.91 352.168 l
S
726.262 615.91 m
757.91 615.91 l
S
726.262 879.648 m
757.91 879.648 l
S
726.262 1143.39 m
757.91 1143.39 l
S
726.262 1407.13 m
757.91 1407.13 l
S
726.262 1670.87 m
757.91 1670.87 l
S
726.262 1934.61 m
757.91 1934.61 l
S
726.262 2198.35 m
757.91 2198.35 l
S
726.262 2462.09 m
757.91 2462.09 l
S
726.262 2725.82 m
757.91 2725.82 l
S
726.262 2989.57 m
757.91 2989.57 l
S
3891.14 352.168 m
3859.49 352.168 l
S
3891.14 615.91 m
3859.49 615.91 l
S
3891.14 879.648 m
3859.49 879.648 l
S
3891.14 1143.39 m
3859.49 1143.39 l
S
3891.14 1407.13 m
3859.49 1407.13 l
S
3891.14 1670.87 m
3859.49 1670.87 l
S
3891.14 1934.61 m
3859.49 1934.61 l
S
3891.14 2198.35 m
3859.49 2198.35 l
S
3891.14 2462.09 m
3859.49 2462.09 l
S
3891.14 2725.82 m
3859.49 2725.82 l
S
3891.14 2989.57 m
3859.49 2989.57 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 42.8 32.0871] Tm
0 0 Td
/F7_0 10.0002 Tf
(-0.06)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
0 26.3738 Td
(-0.05)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
0 52.7476 Td
(-0.04)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
0 79.1214 Td
(-0.03)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
0 105.4952 Td
(-0.02)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
0 131.8694 Td
(-0.01)
[3.330067
0
5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
18.7824 158.2432 Td
(0)
[5.560111
0] Tj
3.1304 184.617 Td
(0.01)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
3.1304 210.9908 Td
(0.02)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
3.1304 237.365 Td
(0.03)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
3.1304 263.7388 Td
(0.04)
[5.560111
0
2.780056
0
5.560111
0
5.560111
0] Tj
Q
354.801 1535.74 m
350.645 1535.74 l
350.645 1543.81 349.422 1547.84 346.973 1547.84 c
322.762 1547.84 l
282.285 1523.14 l
280.656 1522 279.66 1520.41 279.293 1518.37 c
278.922 1516.34 278.738 1513.73 278.738 1510.55 c
274.582 1510.55 l
274.582 1543.56 l
278.738 1543.56 l
278.738 1538.1 279.637 1535.37 281.43 1535.37 c
281.594 1535.37 281.875 1535.45 282.285 1535.62 c
317.383 1556.89 l
285.586 1576.21 l
284.855 1576.7 284.082 1576.95 283.262 1576.95 c
281.633 1576.95 280.473 1576.28 279.777 1574.93 c
279.086 1573.59 278.738 1572.05 278.738 1570.34 c
274.582 1570.34 l
274.582 1595.78 l
278.738 1595.78 l
278.738 1592.77 279.289 1589.95 280.391 1587.34 c
281.492 1584.73 283.184 1582.66 285.469 1581.11 c
322.762 1558.36 l
346.973 1558.36 l
349.422 1558.36 350.645 1562.4 350.645 1570.47 c
354.801 1570.47 l
354.801 1535.74 l
f
383.906 1675.64 m
380.477 1671.24 376.543 1667.47 372.102 1664.34 c
367.66 1661.2 362.91 1658.63 357.859 1656.63 c
352.805 1654.63 347.523 1653.12 342.02 1652.11 c
336.516 1651.09 330.992 1650.58 325.453 1650.58 c
319.828 1650.58 314.262 1651.09 308.758 1652.11 c
303.254 1653.12 297.957 1654.65 292.863 1656.69 c
287.766 1658.73 283.02 1661.34 278.621 1664.52 c
274.219 1667.7 270.344 1671.4 267 1675.64 c
266.836 1675.64 266.758 1675.8 266.758 1676.13 c
266.758 1677.23 l
266.758 1677.48 266.859 1677.7 267.063 1677.91 c
267.266 1678.11 267.488 1678.21 267.734 1678.21 c
268.141 1678.21 268.426 1678.13 268.586 1677.97 c
272.254 1674.13 276.23 1670.95 280.516 1668.43 c
284.793 1665.9 289.359 1663.87 294.211 1662.32 c
299.059 1660.77 304.07 1659.64 309.254 1658.95 c
314.426 1658.26 319.828 1657.91 325.453 1657.91 c
350.316 1657.91 369.23 1664.55 382.191 1677.84 c
382.352 1678.09 382.68 1678.21 383.168 1678.21 c
383.332 1678.21 383.535 1678.11 383.781 1677.91 c
384.023 1677.7 384.148 1677.48 384.148 1677.23 c
384.148 1676.13 l
384.148 1675.8 384.066 1675.64 383.906 1675.64 c
f
354.801 1689.42 m
350.645 1689.42 l
350.645 1692.03 350.441 1694.21 350.035 1695.96 c
349.621 1697.71 348.602 1698.59 346.973 1698.59 c
314.934 1698.59 l
312.816 1698.59 311.285 1698.27 310.348 1697.61 c
309.414 1696.96 308.844 1696.04 308.641 1694.86 c
308.434 1693.68 308.328 1691.87 308.328 1689.42 c
304.172 1689.42 l
302.953 1706.42 l
314.449 1706.42 l
311.02 1707.96 308.246 1710.29 306.129 1713.38 c
304.012 1716.48 302.953 1719.82 302.953 1723.41 c
302.953 1732.46 306.621 1737.76 313.957 1739.31 c
310.617 1740.86 307.949 1743.14 305.949 1746.16 c
303.949 1749.17 302.953 1752.47 302.953 1756.06 c
302.953 1759.65 303.523 1762.64 304.664 1765.05 c
305.805 1767.46 307.555 1769.27 309.926 1770.49 c
312.289 1771.71 315.223 1772.33 318.73 1772.33 c
346.973 1772.33 l
348.602 1772.33 349.621 1773.2 350.035 1774.95 c
350.441 1776.7 350.645 1778.88 350.645 1781.49 c
354.801 1781.49 l
354.801 1754.72 l
350.645 1754.72 l
350.645 1757.33 350.441 1759.51 350.035 1761.25 c
349.621 1763.01 348.602 1763.88 346.973 1763.88 c
319.09 1763.88 l
315.176 1763.88 312.02 1763.32 309.621 1762.18 c
307.215 1761.04 306.012 1758.75 306.012 1755.33 c
306.012 1750.84 307.824 1747.13 311.449 1744.2 c
315.078 1741.27 319.172 1739.8 323.738 1739.8 c
346.973 1739.8 l
348.602 1739.8 349.621 1740.65 350.035 1742.36 c
350.441 1744.08 350.645 1746.28 350.645 1748.97 c
354.801 1748.97 l
354.801 1722.07 l
350.645 1722.07 l
350.645 1724.76 350.441 1726.96 350.035 1728.67 c
349.621 1730.38 348.602 1731.24 346.973 1731.24 c
319.09 1731.24 l
315.262 1731.24 312.121 1730.69 309.676 1729.59 c
307.234 1728.49 306.012 1726.19 306.012 1722.68 c
306.012 1718.19 307.824 1714.48 311.449 1711.55 c
315.078 1708.61 319.172 1707.14 323.738 1707.14 c
346.973 1707.14 l
348.602 1707.14 349.621 1708 350.035 1709.72 c
350.441 1711.43 350.645 1713.59 350.645 1716.2 c
354.801 1716.2 l
354.801 1689.42 l
f
384.148 1793.45 m
384.148 1792.8 383.82 1792.47 383.168 1792.47 c
382.762 1792.47 382.477 1792.55 382.316 1792.71 c
369.273 1806.09 350.316 1812.77 325.453 1812.77 c
300.586 1812.77 281.672 1806.17 268.711 1792.96 c
268.551 1792.64 268.227 1792.47 267.734 1792.47 c
267.488 1792.47 267.266 1792.57 267.063 1792.78 c
266.859 1792.98 266.758 1793.21 266.758 1793.45 c
266.758 1794.55 l
266.758 1794.8 266.836 1795 267 1795.16 c
271.402 1800.79 276.785 1805.48 283.145 1809.23 c
289.5 1812.98 296.262 1815.71 303.438 1817.42 c
310.609 1819.13 317.949 1819.99 325.453 1819.99 c
330.992 1819.99 336.457 1819.52 341.84 1818.58 c
347.219 1817.64 352.516 1816.16 357.734 1814.12 c
362.953 1812.08 367.762 1809.49 372.168 1806.36 c
376.563 1803.21 380.477 1799.48 383.906 1795.16 c
384.066 1795 384.148 1794.8 384.148 1794.55 c
384.148 1793.45 l
f
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font HFVFBB+Helvetica
%%EOF
