clr;
%% set signed distance function
sdf = @(x) PneuNet(x);

%% generate mesh
msh = Mesh(sdf);
msh = msh.set('BdBox',[0,10,0,20],...
              'NElem',700,...
              'MaxIteration',100,...
              'ShowMeshing',false,...
              'Triangulate',false);
      
msh = msh.generateMesh;

%msh.show;

%% show generated mesh
fem = Fem(msh);
fem = fem.set('TimeStep',1/3,...
              'ResidualNorm',1e-3,...
              'VolumeInfill',0.3,...
              'Penal',4,...
              'PrescribedDisplacement',false,...
              'VolumetricPressure',true,...
              'FilterRadius',1,...
              'Periodic',[1/2, 0],...
              'Nonlinear',false,...
              'MaxIterationMMA',80,...
              'Repeat',ones(1,9),...
              'Movie',true,...
              'OptimizationProblem','Compliant');

%% add constraint
id = fem.FindNodes('Left'); 
fem = fem.AddConstraint('Support',id,[1,1]);

id = fem.FindNodes('Right'); 
fem = fem.AddConstraint('Output',id,[0,-1]);
fem = fem.AddConstraint('Spring',id,[0,1e-3]);

id = fem.FindElements('Location',[5,10],1);
fem = fem.AddConstraint('PressureCell',id,[1e-3,0]);

%% set density
fem = fem.initialTopology('Hole',[5,10],2);

%% material
fem.Material = Dragonskin10A;

%% solving
figure(101);
fem.optimize();

%% former
% fem.former(10);
% fem.showISO(0.05,.5);


function Dist = PneuNet(P)
  R1 = dRectangle(P,0,10,0,20);
  R2 = dRectangle(P,-4,1,4,24);
  R3 = dRectangle(P,9,24,4,24);
  C1 = dCircle(P,0,D + 0.5,1);
  C2 = dCircle(P,10,D,1);
  Dist = dDiff(dDiff(dDiff(dDiff(R1,R2),R3),C1),C2);
end

