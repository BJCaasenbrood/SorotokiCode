name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get mpm.m via git
        run: git clone https://github.com/mobeets/mpm.git temp

      - name: Unpack mpm folder
        run: mv temp/mpm.m . & mv temp/mpm_config.m . & mv temp/mpm_nls.mat . & mkdir mpm-packages

      - name: Remove redundant folders
        run: rm -rf temp
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Print current folder structure
        run: ls        

      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-command@v1
        with:
          command: sorotoki -i --approve; sorotoki -b --approve; y = sorotoki('-t');
          # source-folder: code

      # You can use "run-command" to execute custom MATLAB scripts, functions, or statements.
      #- name: Run custom testing procedure
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: disp('Running my custom testing procedure!'); addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);
