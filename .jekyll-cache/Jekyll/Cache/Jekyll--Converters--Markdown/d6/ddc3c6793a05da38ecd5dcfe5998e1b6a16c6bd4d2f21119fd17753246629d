I"x<h1 class="no_toc" id="uni-axial-tensile-test-hyper-elastic">Uni-axial tensile test (hyper-elastic)</h1>

<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#introduction" id="markdown-toc-introduction">Introduction</a></li>
  <li><a href="#generating-the-mesh-through-sdfs" id="markdown-toc-generating-the-mesh-through-sdfs">Generating the mesh through SDFs</a></li>
  <li><a href="#building-the-finite-element-model" id="markdown-toc-building-the-finite-element-model">Building the finite element model</a></li>
  <li><a href="#assigning-boundary-conditions" id="markdown-toc-assigning-boundary-conditions">Assigning boundary conditions</a></li>
  <li><a href="#output-logging" id="markdown-toc-output-logging">Output logging</a></li>
  <li><a href="#adding-material" id="markdown-toc-adding-material">Adding material</a></li>
  <li><a href="#solving-the-nonlinear-elastic-problem" id="markdown-toc-solving-the-nonlinear-elastic-problem">Solving the nonlinear elastic problem</a></li>
  <li><a href="#post-processing-the-data" id="markdown-toc-post-processing-the-data">Post-processing the data</a></li>
  <li><a href="#complete-code-25-lines-without-comments" id="markdown-toc-complete-code-25-lines-without-comments">Complete code (25 lines without comments)</a></li>
</ol>

</details>
<hr />

<h4 class="no_toc" id="difficulty-easy">Difficulty: <code class="language-plaintext fs-3 text-green-200 highlighter-rouge">easy</code></h4>
<ul>
  <li>Required classes: <code class="language-plaintext text-purple-000 highlighter-rouge">Sdf.m</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Mesh.m</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Fem.m</code></li>
  <li>Code length: <code class="language-plaintext text-purple-000 highlighter-rouge">~25 lines</code> (without comments)</li>
</ul>

<hr />

<h3 id="introduction">Introduction</h3>
<p>In this illustrative example, we will perform a simple pull test using a hyper-elastic material â€“ Ecoflex-0030 from SmoothOn. Assuming a two-dimensional problem, we consider a 20x20 specimen and perform an uni-axial elongation of $\lambda_{1} = 500\%$ (with $\lambda_2 = \lambda_3$). We model this using a single quadrilateral finite-element subjected to plane-stress conditions.</p>

<div align="center"> <img src="./img/intro.png" width="500" /> </div>
<div align="center"> Stock image of uni-axial test (left, see [1]). Produced result from SOROTOKI (right). </div>

<h3 id="generating-the-mesh-through-sdfs">Generating the mesh through SDFs</h3>
<p>Lets start generating a planar rectangular mesh. To discretize the material domain, we use the Signed Distance Function (SDF) Class and Meshing Class â€“ <code class="language-plaintext text-purple-000 highlighter-rouge">Sdf.m</code> and <code class="language-plaintext text-purple-000 highlighter-rouge">Mesh.m</code>, respectively. We can define the rectangular domain using SDFs and convert it to a quadtrilateral mesh, consider the following code:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% simulation settings</span>
<span class="n">H</span>  <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>       <span class="c1">% height of specimen</span>
<span class="n">W</span>  <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>       <span class="c1">% width of specimen</span>
<span class="n">dL</span> <span class="o">=</span> <span class="n">H</span><span class="o">*</span><span class="mi">6</span><span class="p">;</span>      <span class="c1">% elongation of specimen</span>

<span class="c1">%% signed distance function (SDF)</span>
<span class="n">sdf</span> <span class="o">=</span> <span class="n">sRectangle</span><span class="p">(</span><span class="n">W</span><span class="p">,</span><span class="n">H</span><span class="p">);</span>

<span class="c1">%% generate mesh</span>
<span class="n">msh</span> <span class="o">=</span> <span class="n">Mesh</span><span class="p">(</span><span class="n">sdf</span><span class="p">,</span><span class="s1">'Quads'</span><span class="p">,[</span><span class="mi">20</span><span class="p">,</span><span class="mi">20</span><span class="p">]);</span>
<span class="n">msh</span> <span class="o">=</span> <span class="n">msh</span><span class="o">.</span><span class="n">generate</span><span class="p">();</span>

<span class="c1">%% show SDF and mesh</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span> <span class="n">sdf</span><span class="o">.</span><span class="nb">show</span><span class="p">();</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> <span class="n">msh</span><span class="o">.</span><span class="nb">show</span><span class="p">();</span>
</code></pre></div></div>

<p>The code above should produce the following:</p>

<div align="center"> <img src="./img/mesh.png" width="350" /> </div>
<div align="center"> Signed Distance Function (left). Quad mesh (right). </div>

<h3 id="building-the-finite-element-model">Building the finite element model</h3>
<p>We can now convert this discretized mesh to a finite element model in a few steps. First, we input the <code class="language-plaintext text-purple-000 highlighter-rouge">msh</code> object generated by the class <code class="language-plaintext text-purple-000 highlighter-rouge">Mesh.m</code> into <code class="language-plaintext text-purple-000 highlighter-rouge">Fem.m</code>. Secondly, we specify some important setting for the finite element solver:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% convert Mesh to Fem</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">Fem</span><span class="p">(</span><span class="n">msh</span><span class="p">)</span>

<span class="c1">%% setting for fem model</span>
<span class="n">fem</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="s1">'TimeStep'</span><span class="p">,</span><span class="mi">1</span><span class="p">/</span><span class="mi">25</span><span class="p">);</span>
<span class="n">fem</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="s1">'PrescribedDisplacement'</span><span class="p">,</span><span class="nb">true</span><span class="p">);</span>
<span class="n">fem</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="s1">'Linestyle'</span><span class="p">,</span><span class="s1">'none'</span><span class="p">);</span>
<span class="n">fem</span><span class="o">.</span><span class="nb">set</span><span class="p">(</span><span class="s1">'Coloraxis'</span><span class="p">,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]);</span>
</code></pre></div></div>
<p>Alternatively, we can rewrite the code above more compactly.</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% generate fem model</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">Fem</span><span class="p">(</span><span class="n">msh</span><span class="p">,</span><span class="s1">'TimeStep'</span><span class="p">,</span><span class="mi">1</span><span class="p">/</span><span class="mi">25</span><span class="p">,</span><span class="s1">'PrescribedDisplacement'</span><span class="p">,</span><span class="nb">true</span><span class="p">,</span><span class="k">...</span>
<span class="s1">'Linestyle'</span><span class="p">,</span><span class="s1">'none'</span><span class="p">,</span><span class="s1">'Coloraxis'</span><span class="p">,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]);</span>
</code></pre></div></div>

<p>Lets discuss these settings in more detail: The setting <code class="language-plaintext text-purple-000 highlighter-rouge">TimeStep</code> sets the time increments for the nonlinear solver; <code class="language-plaintext text-purple-000 highlighter-rouge">PrescribedDisplacement</code> sets the mechanical problem as a prescribed displacements instead of applied loads (default is set to <code class="language-plaintext text-purple-000 highlighter-rouge">false</code>); <code class="language-plaintext text-purple-000 highlighter-rouge">Linestyle</code> sets the linestyle of the plots; <code class="language-plaintext text-purple-000 highlighter-rouge">Coloraxis</code> sets the color axis for the colormaps. The default colormap is <code class="language-plaintext text-purple-000 highlighter-rouge">turbo</code> (a custom colormap from SOROTOKI â€“ adapted from python).</p>

<h3 id="assigning-boundary-conditions">Assigning boundary conditions</h3>
<p>Given the symmetry of the problem, we can fixate the $x$-displacement for the left face of the material domain and fixate the $y$-displacement for the bottom face. We can use the function <code class="language-plaintext text-purple-000 highlighter-rouge">fem.AddConstraint</code> with the input <code class="language-plaintext text-purple-000 highlighter-rouge">Support</code>. To find the associated nodal indices of the model <code class="language-plaintext text-purple-000 highlighter-rouge">fem</code>, we can use the public function <code class="language-plaintext text-purple-000 highlighter-rouge">fem.FindNodes</code> together with a specified argument of their location, e.g., <code class="language-plaintext text-purple-000 highlighter-rouge">Top</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Bottom</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Left</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Right</code>. Similarly, the applied displacement <code class="language-plaintext text-purple-000 highlighter-rouge">dL</code> is added using the <code class="language-plaintext text-purple-000 highlighter-rouge">fem.AddConstraint</code> function with the input <code class="language-plaintext text-purple-000 highlighter-rouge">Load</code>. The code for these procedures is given below:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% adding boundary condition</span>
<span class="n">id</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Left'</span><span class="p">);</span> 
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Support'</span><span class="p">,</span><span class="n">id</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">]);</span>

<span class="n">id</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Bottom'</span><span class="p">);</span> 
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Support'</span><span class="p">,</span><span class="n">id</span><span class="p">,[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]);</span>

<span class="n">id</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Top'</span><span class="p">);</span> 
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Load'</span><span class="p">,</span><span class="n">id</span><span class="p">,[</span><span class="mi">0</span><span class="p">,</span><span class="n">dL</span><span class="p">]);</span>
</code></pre></div></div>

<h3 id="output-logging">Output logging</h3>
<p>To record the intermediate nodal data during the numerical solver, we can add a logger. To do so, we again use the <code class="language-plaintext text-purple-000 highlighter-rouge">fem.AddConstraint</code> but with <code class="language-plaintext text-purple-000 highlighter-rouge">Output</code> as its input argument.</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% outputs nodal data in fem.Log</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Output'</span><span class="p">,</span><span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'NW'</span><span class="p">));</span>
</code></pre></div></div>
<p>Here <code class="language-plaintext text-purple-000 highlighter-rouge">fem.FindNodes('NW')</code> finds the single node in the North-West corner.</p>

<p>After the finite element problem is solved, the data is recorded in a struct which can be accessed through <code class="language-plaintext text-purple-000 highlighter-rouge">fem.Log</code>. This structured data contains the solver time <code class="language-plaintext text-purple-000 highlighter-rouge">Log.t</code>, relative displacement w.r.t. the undeformed configuration <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Ux</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Uy</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Un</code>, the stresses <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Sxx</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Syy</code>, <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Sxy</code> and the Von Mises stress <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Svm</code>. Additionally, <code class="language-plaintext text-purple-000 highlighter-rouge">Log.Psi</code> given the total strain energy $\Psi(\cdot)$ of the continuum solid over the finite time horizon.</p>

<h3 id="adding-material">Adding material</h3>
<p>SOROTOKI comes equipped with a library of preset hyper-elastic materials (<a href="https://bjcaasenbrood.github.io/SorotokiCode/docs/documentation/guide.html#hyper-elastic-material-presets">list of preset materials</a>). Examples include: Ecoflex-0030/50, Dragonskin 10A/30A, Elastosil, and NinjaFlex. To add the Ecoflex-0030 material properties to the FEM model, simply run:</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% adding material properties</span>
<span class="n">fem</span><span class="o">.</span><span class="n">Material</span> <span class="o">=</span> <span class="n">Ecoflex0030</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="solving-the-nonlinear-elastic-problem">Solving the nonlinear elastic problem</h3>
<p>To solve the FEM problem, simply run:</p>
<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% solving</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">solve</span><span class="p">();</span>
</code></pre></div></div>
<p>Solving this nonlinear problem might take a few minutes. During the solving routine, plots are generated to display the intermediate displacements; and the error residuals are shown in MATLABâ€™s command window. To stop the solver, simply press <code class="language-plaintext text-purple-000 highlighter-rouge">Ctrl + C</code> in the command window.</p>

<h3 id="post-processing-the-data">Post-processing the data</h3>
<p>Last, but definitely not least, is post processing the numerical data. Recall that all intermediate nodal data is stored in <code class="language-plaintext text-purple-000 highlighter-rouge">fem.Log</code>. Let us plot the deformed material domain, along with the Von Mises stress as a function of the elongation strain. To do so, consider the code below:</p>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% post-processing data and plotting</span>
<span class="n">Eyy</span> <span class="o">=</span> <span class="p">(</span><span class="n">dL</span><span class="p">/</span><span class="n">H</span><span class="p">)</span><span class="o">*</span><span class="n">fem</span><span class="o">.</span><span class="n">Log</span><span class="o">.</span><span class="n">t</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
<span class="n">Syy</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">Log</span><span class="o">.</span><span class="n">Svm</span><span class="p">;</span>

<span class="c1">% compute the exact solution</span>
<span class="n">Eyy_exact</span> <span class="o">=</span> <span class="nb">linspace</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="o">+</span><span class="p">(</span><span class="n">dL</span><span class="p">/</span><span class="n">H</span><span class="p">),</span><span class="mi">500</span><span class="p">);</span>
<span class="n">Syy_exact</span> <span class="o">=</span> <span class="o">@</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="n">x</span><span class="o">.^</span><span class="mi">2</span> <span class="o">-</span> <span class="mf">1.</span><span class="p">/</span><span class="n">x</span><span class="p">)</span><span class="o">.*</span><span class="n">fem</span><span class="o">.</span><span class="n">Material</span><span class="o">.</span><span class="n">dWdI</span><span class="p">(</span><span class="n">x</span><span class="o">.^</span><span class="mi">2</span> <span class="o">+</span> <span class="mf">2.</span><span class="p">/</span><span class="n">x</span><span class="p">);</span>

<span class="nb">figure</span><span class="p">(</span><span class="mi">102</span><span class="p">);</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span> <span class="n">fem</span><span class="o">.</span><span class="nb">show</span><span class="p">(</span><span class="s1">'Uy'</span><span class="p">);</span> 
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> <span class="nb">plot</span><span class="p">(</span><span class="n">Eyy</span><span class="p">,</span><span class="n">Syy</span><span class="p">,</span><span class="s1">'o-'</span><span class="p">,</span><span class="s1">'Color'</span><span class="p">,</span><span class="n">col</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="s1">'linewidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> 
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> <span class="nb">hold</span> <span class="n">on</span><span class="p">;</span> <span class="nb">plot</span><span class="p">(</span><span class="n">Eyy_exact</span><span class="p">,</span><span class="n">Syy_exact</span><span class="p">(</span><span class="n">Eyy_exact</span><span class="p">),</span><span class="k">...</span>
    <span class="s1">'--'</span><span class="p">,</span><span class="s1">'Color'</span><span class="p">,</span><span class="n">col</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="s1">'linewidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>

<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'Uni-axial strain (-)'</span><span class="p">,</span><span class="s1">'interpreter'</span><span class="p">,</span><span class="s1">'latex'</span><span class="p">,</span><span class="s1">'fontsize'</span><span class="p">,</span><span class="mi">20</span><span class="p">);</span>
<span class="nb">ylabel</span><span class="p">(</span><span class="s1">'Von Mises stress (MPa)'</span><span class="p">,</span><span class="s1">'interpreter'</span><span class="p">,</span><span class="s1">'latex'</span><span class="p">,</span><span class="s1">'fontsize'</span><span class="p">,</span><span class="mi">20</span><span class="p">);</span>
<span class="nb">legend</span><span class="p">(</span><span class="s1">'FEM'</span><span class="p">,</span><span class="s1">'Exact'</span><span class="p">,</span><span class="s1">'Location'</span><span class="p">,</span><span class="s1">'Northwest'</span><span class="p">,</span><span class="s1">'fontsize'</span><span class="p">,</span><span class="mi">18</span><span class="p">);</span>
<span class="nb">grid</span> <span class="n">on</span><span class="p">;</span> <span class="nb">axis</span> <span class="n">tight</span><span class="p">;</span>
</code></pre></div></div>
<p>The code above should produce the following:</p>

<div align="center"> <img src="./img/result.png" width="500" /> </div>
<div align="center"> Uni-axial test of Ecoflex-0030 specimen (left). Strain vs. Von Mises (right). </div>

<h2 id="complete-code-25-lines-without-comments">Complete code (25 lines without comments)</h2>

<div class="language-matlab highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">%% simulation settings</span>
<span class="n">H</span>  <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>       <span class="c1">% height of specimen</span>
<span class="n">W</span>  <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>       <span class="c1">% width of specimen</span>
<span class="n">dL</span> <span class="o">=</span> <span class="n">H</span><span class="o">*</span><span class="mi">5</span><span class="p">;</span>      <span class="c1">% elongation of specimen</span>

<span class="c1">%% signed distance function (SDF)</span>
<span class="n">sdf</span> <span class="o">=</span> <span class="n">sRectangle</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="n">W</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">H</span><span class="p">);</span>

<span class="c1">%% generate mesh</span>
<span class="n">msh</span> <span class="o">=</span> <span class="n">Mesh</span><span class="p">(</span><span class="n">sdf</span><span class="p">,</span><span class="s1">'Quads'</span><span class="p">,[</span><span class="mi">20</span><span class="p">,</span><span class="mi">20</span><span class="p">]);</span>
<span class="n">msh</span> <span class="o">=</span> <span class="n">msh</span><span class="o">.</span><span class="n">generate</span><span class="p">();</span>

<span class="c1">%% show SDF and mesh</span>
<span class="nb">figure</span><span class="p">(</span><span class="mi">101</span><span class="p">);</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span> <span class="n">sdf</span><span class="o">.</span><span class="nb">show</span><span class="p">();</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> <span class="n">msh</span><span class="o">.</span><span class="nb">show</span><span class="p">();</span>

<span class="c1">%% generate fem model</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">Fem</span><span class="p">(</span><span class="n">msh</span><span class="p">,</span><span class="s1">'TimeStep'</span><span class="p">,</span><span class="mi">1</span><span class="p">/</span><span class="mi">15</span><span class="p">,</span><span class="s1">'PrescribedDisplacement'</span><span class="p">,</span><span class="nb">true</span><span class="p">,</span><span class="k">...</span>
<span class="s1">'Linestyle'</span><span class="p">,</span><span class="s1">'none'</span><span class="p">);</span>

<span class="c1">%% adding boundary condition</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Support'</span><span class="p">,</span><span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Left'</span><span class="p">),[</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">]);</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Support'</span><span class="p">,</span><span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Bottom'</span><span class="p">),[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">]);</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Load'</span><span class="p">,</span><span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'Top'</span><span class="p">),[</span><span class="mi">0</span><span class="p">,</span><span class="n">dL</span><span class="p">]);</span>

<span class="c1">%% outputs nodal data in fem.Log</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">AddConstraint</span><span class="p">(</span><span class="s1">'Output'</span><span class="p">,</span><span class="n">fem</span><span class="o">.</span><span class="n">FindNodes</span><span class="p">(</span><span class="s1">'NW'</span><span class="p">),[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]);</span>

<span class="c1">%% adding material</span>
<span class="n">fem</span><span class="o">.</span><span class="n">Material</span> <span class="o">=</span> <span class="n">Ecoflex0030</span><span class="p">;</span>

<span class="c1">%% solving</span>
<span class="n">fem</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">solve</span><span class="p">();</span>

<span class="c1">%% post-processing data and plotting</span>
<span class="n">Exx</span> <span class="o">=</span> <span class="p">(</span><span class="n">dL</span><span class="p">/</span><span class="n">H</span><span class="p">)</span><span class="o">*</span><span class="n">fem</span><span class="o">.</span><span class="n">Log</span><span class="o">.</span><span class="n">t</span><span class="p">;</span>
<span class="n">Svm</span> <span class="o">=</span> <span class="n">fem</span><span class="o">.</span><span class="n">Log</span><span class="o">.</span><span class="n">Svm</span><span class="p">;</span>

<span class="nb">figure</span><span class="p">(</span><span class="mi">102</span><span class="p">);</span>
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span> <span class="n">fem</span><span class="o">.</span><span class="nb">show</span><span class="p">(</span><span class="s1">'Uy'</span><span class="p">);</span> 
<span class="nb">subplot</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span> <span class="nb">plot</span><span class="p">(</span><span class="n">Exx</span><span class="p">,</span><span class="n">Svm</span><span class="p">,</span><span class="s1">'-o'</span><span class="p">,</span><span class="s1">'linewidth'</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="nb">xlabel</span><span class="p">(</span><span class="s1">'Uni-axial strain (-)'</span><span class="p">,</span><span class="s1">'interpreter'</span><span class="p">,</span><span class="s1">'latex'</span><span class="p">,</span><span class="s1">'fontsize'</span><span class="p">,</span><span class="mi">20</span><span class="p">);</span>
<span class="nb">ylabel</span><span class="p">(</span><span class="s1">'Von Mises stress (MPa)'</span><span class="p">,</span><span class="s1">'interpreter'</span><span class="p">,</span><span class="s1">'latex'</span><span class="p">,</span><span class="s1">'fontsize'</span><span class="p">,</span><span class="mi">20</span><span class="p">);</span>
<span class="nb">set</span><span class="p">(</span><span class="nb">gca</span><span class="p">,</span><span class="s1">'linewidth'</span><span class="p">,</span><span class="mf">1.5</span><span class="p">);</span> <span class="nb">grid</span> <span class="n">on</span><span class="p">;</span> <span class="nb">axis</span> <span class="n">tight</span><span class="p">;</span>
</code></pre></div></div>

<p class="fs-3"><a href="https://www.rubbernews.com/blogs/new-products-james-heal-makes-move-rubber-testing-markets"><strong>[1]</strong></a> <strong>Titan10</strong> a pull-test instrument for rubber and elastomers.</p>

:ET